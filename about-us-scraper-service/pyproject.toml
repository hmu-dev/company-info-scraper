[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
^/docs
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
skip = ["docs", ".git", "__pycache__", "build", "dist"]
skip_glob = ["*.pyi"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
default_section = "THIRDPARTY"
known_first_party = ["api"]
known_third_party = ["boto3", "botocore", "fastapi", "pydantic", "pytest"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Tests that take longer than 1 second",
    "api: API endpoint tests",
    "llm: LLM service tests",
    "media: Media processing tests",
    "cache: Caching tests",
    "retry: Retry mechanism tests",
    "cost: Cost tracking tests",
]

[tool.coverage.run]
branch = true
source = ["api"]
omit = [
    "tests/*",
    "docs/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
ignore_errors = true
fail_under = 90
show_missing = true

[tool.coverage.html]
directory = "htmlcov"
